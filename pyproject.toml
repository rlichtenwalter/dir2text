[tool.poetry]
name = "dir2text"
version = "1.0.1"
description = "A Python library and command-line tool for expressing directory structures and file contents in formats suitable for Large Language Models (LLMs). It combines directory tree visualization with file contents in a memory-efficient, streaming format."
repository = "https://github.com/rlichtenwalter/dir2text.git"
authors = ["Ryan N. Lichtenwalter <rlichtenwalter@gmail.com>"]
maintainers = ["Ryan N. Lichtenwalter <rlichtenwalter@gmail.com>"]
packages = [{include = "dir2text", from = "src"}]
keywords = ["large language model", "LLM", "token", "tokenizer", "SLOC", "tree", "code assistant"]
readme = "README.md"
license = "MIT"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Topic :: Software Development",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

[project.urls]
issues = "https://github.com/rlichtenwalter/dir2text/issues"
changelog = "https://github.com/rlichtenwalter/dir2text/blob/master/CHANGELOG.md"

[tool.poetry.dependencies]
python = ">=3.9.1,<4.0"
anytree = "^2.12.0"
pathspec = "^0.12.1"
tiktoken = {version = "^0.8.0", optional = true}

[tool.poetry.extras]
token_counting = ["tiktoken"]
all = ["tiktoken"]

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
flake8 = "^7.1.1"
flake8-pyproject = "^1.2.3"
importlib-metadata = "^8.5.0"
isort = "^5.13.2"
mypy = "^1.12.1"
pre-commit = "^4.0.1"
pytest = "^8.3.0"
pytest-cov = "^5.0.0"
tox = "^4.23.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
dir2text = "dir2text.cli:main"

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120

[tool.flake8]
max-line-length = 120
exclude = [
    ".tox",
    "*.egg",
    "build",
    "data"
]

[tool.mypy]
mypy_path = "src:stubs"
strict = true
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-v -ra -q --doctest-modules"
testpaths = [
    "tests",
    "src",
]